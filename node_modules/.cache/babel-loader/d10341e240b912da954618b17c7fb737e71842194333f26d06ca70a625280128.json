{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharpener\\\\React.Js\\\\BuildApps\\\\fetchingapiproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const fetchApiMoviesHandler = () => {\n    const getMoviesData = async () => {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (response.ok) return response.json();\n      throw new Error(\"Something went wrong\");\n    };\n    getMoviesData().then(responseData => {\n      const mappedMoviesData = responseData.results.map(data => ({\n        id: data.episode_id,\n        title: data.title,\n        releaseDate: data.release_date,\n        openingText: data.opening_crawl\n      }));\n      setMoviesData(mappedMoviesData);\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchApiMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ByrP7s+H4ntmtSg95eSnPeHmptg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","moviesData","setMoviesData","fetchApiMoviesHandler","getMoviesData","response","fetch","ok","json","Error","then","responseData","mappedMoviesData","results","map","data","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","catch","error","console","log","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movies","_c","$RefreshReg$"],"sources":["D:/Sharpener/React.Js/BuildApps/fetchingapiproject/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n\n  const fetchApiMoviesHandler = () => {\n    const getMoviesData = async () => {\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      if (response.ok) return response.json();\n      throw new Error(\"Something went wrong\");\n    };\n    getMoviesData()\n      .then((responseData) => {\n        const mappedMoviesData = responseData.results.map((data) => ({\n          id: data.episode_id,\n          title: data.title,\n          releaseDate: data.release_date,\n          openingText: data.opening_crawl,\n        }));\n        setMoviesData(mappedMoviesData);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchApiMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        <MoviesList movies={moviesData} />\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,qBAAqB,GAAGA,CAAA,KAAM;IAClC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAC5D,IAAID,QAAQ,CAACE,EAAE,EAAE,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACvC,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;IACzC,CAAC;IACDL,aAAa,CAAC,CAAC,CACZM,IAAI,CAAEC,YAAY,IAAK;MACtB,MAAMC,gBAAgB,GAAGD,YAAY,CAACE,OAAO,CAACC,GAAG,CAAEC,IAAI,KAAM;QAC3DC,EAAE,EAAED,IAAI,CAACE,UAAU;QACnBC,KAAK,EAAEH,IAAI,CAACG,KAAK;QACjBC,WAAW,EAAEJ,IAAI,CAACK,YAAY;QAC9BC,WAAW,EAAEN,IAAI,CAACO;MACpB,CAAC,CAAC,CAAC;MACHpB,aAAa,CAACU,gBAAgB,CAAC;IACjC,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,oBACE1B,OAAA,CAACJ,KAAK,CAACiC,QAAQ;IAAAC,QAAA,gBACb9B,OAAA;MAAA8B,QAAA,eACE9B,OAAA;QAAQ+B,OAAO,EAAE1B,qBAAsB;QAAAyB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACVnC,OAAA;MAAA8B,QAAA,eACE9B,OAAA,CAACF,UAAU;QAACsC,MAAM,EAAEjC;MAAW;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAACjC,EAAA,CAhCQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}