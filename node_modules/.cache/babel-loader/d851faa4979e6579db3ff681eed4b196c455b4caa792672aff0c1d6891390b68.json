{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharpener\\\\React.Js\\\\BuildApps\\\\fetchingapiproject\\\\src\\\\store\\\\MovieProvider.js\",\n  _s = $RefreshSig$();\nimport MovieContext from \"./MovieContext\";\nimport React, { useState, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieProvider = props => {\n  _s();\n  const [movieState, setMovieState] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const fetchApiMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://used-react-fetch-default-rtdb.firebaseio.com/movies.json\");\n      if (!response.ok) throw new Error(\"Something went wrong\");\n      const data = await response.json();\n      const allMoviesData = [];\n      for (let key in data) {\n        allMoviesData.unshift({\n          id: key,\n          title: data[key].title,\n          releaseDate: data[key].releaseDate,\n          openingText: data[key].openingText\n        });\n      }\n      // console.log(allMoviesData);.\n\n      setMovieState(allMoviesData);\n      setIsLoading(false);\n    } catch (error) {\n      setError(error.message);\n    }\n  }, []);\n  const addMovieHelper = movies => {\n    setMovieState(movies);\n  };\n  const deleteMovieHandler = id => {\n    const updatedMovies = movieState.filter(movie => movie.id !== id);\n    setMovieState(updatedMovies);\n  };\n  const errorHelper = error => {\n    setError(error);\n  };\n  const isLoadingHelper = isLoad => {\n    setIsLoading(isLoad);\n  };\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      movies: movieState,\n      addMovie: addMovieHelper,\n      deleteMovie: deleteMovieHandler,\n      fetchApiMovies: fetchApiMoviesHandler,\n      isLoading: isLoading,\n      isLoadingHelper: isLoadingHelper,\n      error: error,\n      errorHelper: errorHelper\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieProvider, \"EYm7a8PnQYU0M/NjJrhNuhsQ9w0=\");\n_c = MovieProvider;\nexport default MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["MovieContext","React","useState","useCallback","jsxDEV","_jsxDEV","MovieProvider","props","_s","movieState","setMovieState","error","setError","isLoading","setIsLoading","fetchApiMoviesHandler","response","fetch","ok","Error","data","json","allMoviesData","key","unshift","id","title","releaseDate","openingText","message","addMovieHelper","movies","deleteMovieHandler","updatedMovies","filter","movie","errorHelper","isLoadingHelper","isLoad","Provider","value","addMovie","deleteMovie","fetchApiMovies","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Sharpener/React.Js/BuildApps/fetchingapiproject/src/store/MovieProvider.js"],"sourcesContent":["import MovieContext from \"./MovieContext\";\r\nimport React, { useState, useCallback } from \"react\";\r\n\r\nconst MovieProvider = (props) => {\r\n  const [movieState, setMovieState] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const fetchApiMoviesHandler = useCallback(async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        \"https://used-react-fetch-default-rtdb.firebaseio.com/movies.json\"\r\n      );\r\n      if (!response.ok) throw new Error(\"Something went wrong\");\r\n\r\n      const data = await response.json();\r\n\r\n      const allMoviesData = [];\r\n      for (let key in data) {\r\n        allMoviesData.unshift({\r\n          id: key,\r\n          title: data[key].title,\r\n          releaseDate: data[key].releaseDate,\r\n          openingText: data[key].openingText,\r\n        });\r\n      }\r\n      // console.log(allMoviesData);.\r\n\r\n      setMovieState(allMoviesData);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }, []);\r\n\r\n  const addMovieHelper = (movies) => {\r\n    setMovieState(movies);\r\n  };\r\n  const deleteMovieHandler=(id)=> {\r\n    const updatedMovies = movieState.filter(movie=>movie.id!==id);\r\n    setMovieState(updatedMovies);\r\n  }\r\n  const errorHelper=(error)=> {\r\n    setError(error);\r\n  }\r\n  \r\n  const isLoadingHelper=(isLoad)=> {\r\n    setIsLoading(isLoad);\r\n  }\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{\r\n        movies: movieState,\r\n        addMovie: addMovieHelper,\r\n        deleteMovie:deleteMovieHandler,\r\n        fetchApiMovies:fetchApiMoviesHandler,\r\n        isLoading:isLoading,\r\n        isLoadingHelper:isLoadingHelper,\r\n        error: error,\r\n        errorHelper:errorHelper,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MovieProvider;\r\n"],"mappings":";;AAAA,OAAOA,YAAY,MAAM,gBAAgB;AACzC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMa,qBAAqB,GAAGZ,WAAW,CAAC,YAAY;IACpDW,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEACF,CAAC;MACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;MAEzD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,MAAMC,aAAa,GAAG,EAAE;MACxB,KAAK,IAAIC,GAAG,IAAIH,IAAI,EAAE;QACpBE,aAAa,CAACE,OAAO,CAAC;UACpBC,EAAE,EAAEF,GAAG;UACPG,KAAK,EAAEN,IAAI,CAACG,GAAG,CAAC,CAACG,KAAK;UACtBC,WAAW,EAAEP,IAAI,CAACG,GAAG,CAAC,CAACI,WAAW;UAClCC,WAAW,EAAER,IAAI,CAACG,GAAG,CAAC,CAACK;QACzB,CAAC,CAAC;MACJ;MACA;;MAEAlB,aAAa,CAACY,aAAa,CAAC;MAC5BR,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,QAAQ,CAACD,KAAK,CAACkB,OAAO,CAAC;IACzB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAIC,MAAM,IAAK;IACjCrB,aAAa,CAACqB,MAAM,CAAC;EACvB,CAAC;EACD,MAAMC,kBAAkB,GAAEP,EAAE,IAAI;IAC9B,MAAMQ,aAAa,GAAGxB,UAAU,CAACyB,MAAM,CAACC,KAAK,IAAEA,KAAK,CAACV,EAAE,KAAGA,EAAE,CAAC;IAC7Df,aAAa,CAACuB,aAAa,CAAC;EAC9B,CAAC;EACD,MAAMG,WAAW,GAAEzB,KAAK,IAAI;IAC1BC,QAAQ,CAACD,KAAK,CAAC;EACjB,CAAC;EAED,MAAM0B,eAAe,GAAEC,MAAM,IAAI;IAC/BxB,YAAY,CAACwB,MAAM,CAAC;EACtB,CAAC;EAED,oBACEjC,OAAA,CAACL,YAAY,CAACuC,QAAQ;IACpBC,KAAK,EAAE;MACLT,MAAM,EAAEtB,UAAU;MAClBgC,QAAQ,EAAEX,cAAc;MACxBY,WAAW,EAACV,kBAAkB;MAC9BW,cAAc,EAAC5B,qBAAqB;MACpCF,SAAS,EAACA,SAAS;MACnBwB,eAAe,EAACA,eAAe;MAC/B1B,KAAK,EAAEA,KAAK;MACZyB,WAAW,EAACA;IACd,CAAE;IAAAQ,QAAA,EAEDrC,KAAK,CAACqC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAE5B,CAAC;AAACxC,EAAA,CAjEIF,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AAmEnB,eAAeA,aAAa;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}