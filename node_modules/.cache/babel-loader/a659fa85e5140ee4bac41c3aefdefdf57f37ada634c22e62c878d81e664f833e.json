{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharpener\\\\React.Js\\\\BuildApps\\\\fetchingapiproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCancel, setIsCancel] = useState(false);\n  let fetchApiMoviesHandler = null;\n  try {\n    fetchApiMoviesHandler = async () => {\n      // setIsCancel(false);\n      setIsLoading(true);\n      const response = await fetch(\"https://swapi.dev/api/fil/\");\n      if (!response.ok) throw Error(\"Something went wrong ...Retrying\");\n      const data = response.json();\n      const mappedMoviesData = data.results.map(data => ({\n        id: data.episode_id,\n        title: data.title,\n        releaseDate: data.release_date,\n        openingText: data.opening_crawl\n      }));\n      setMoviesData(mappedMoviesData);\n      setIsLoading(false);\n    };\n  } catch (error) {\n    console.log(error);\n  }\n  const cancelButtonHelper = () => {\n    setIsCancel(true);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchApiMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this), !isLoading && moviesData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not found moviesData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelButtonHelper,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PbPxzWuV95Arh5EGclGxCKTmNLE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","moviesData","setMoviesData","isLoading","setIsLoading","isCancel","setIsCancel","fetchApiMoviesHandler","response","fetch","ok","Error","data","json","mappedMoviesData","results","map","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","error","console","log","cancelButtonHelper","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movies","length","type","_c","$RefreshReg$"],"sources":["D:/Sharpener/React.Js/BuildApps/fetchingapiproject/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isCancel, setIsCancel] = useState(false);\n\n  let fetchApiMoviesHandler = null;\n  try {\n    fetchApiMoviesHandler = async () => {\n      // setIsCancel(false);\n      setIsLoading(true);\n\n      const response = await fetch(\"https://swapi.dev/api/fil/\");\n      if (!response.ok) throw Error(\"Something went wrong ...Retrying\");\n      const data = response.json();\n      const mappedMoviesData = data.results.map((data) => ({\n        id: data.episode_id,\n        title: data.title,\n        releaseDate: data.release_date,\n        openingText: data.opening_crawl,\n      }));\n      setMoviesData(mappedMoviesData);\n      setIsLoading(false);\n    };\n  } catch (error) {\n    console.log(error);\n  }\n\n  const cancelButtonHelper = () => {\n    setIsCancel(true);\n    setIsLoading(false);\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchApiMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={moviesData} />}\n        {!isLoading && moviesData.length === 0 && <p>Not found moviesData</p>}\n        {isLoading && (\n          <div>\n            <p>Loading...</p>\n            <button type=\"button\" onClick={cancelButtonHelper}>\n              Cancel\n            </button>\n          </div>\n        )}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}