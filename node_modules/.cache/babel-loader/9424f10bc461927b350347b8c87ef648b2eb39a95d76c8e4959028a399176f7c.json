{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharpener\\\\React.Js\\\\BuildApps\\\\fetchingapiproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  let fetchApiMoviesHandler = async () => {\n    setIsLoading(true);\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    // if (!response.ok) throw Error(\"Something went wrong ...Retrying\");\n    const data = response.json();\n    const mappedMoviesData = data.results.map(data => ({\n      id: data.episode_id,\n      title: data.title,\n      releaseDate: data.release_date,\n      openingText: data.opening_crawl\n    }));\n    setMoviesData(mappedMoviesData);\n    setIsLoading(false);\n  };\n\n  // useEffect(()=> {\n  //   fetchApiMoviesHandler();\n  // }, [])\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchApiMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this), !isLoading && moviesData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not found moviesData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 51\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3N0XMW7HR5mAB0ey1WNUsS4Fau0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MoviesList","jsxDEV","_jsxDEV","App","_s","moviesData","setMoviesData","isLoading","setIsLoading","fetchApiMoviesHandler","response","fetch","data","json","mappedMoviesData","results","map","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movies","length","_c","$RefreshReg$"],"sources":["D:/Sharpener/React.Js/BuildApps/fetchingapiproject/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let fetchApiMoviesHandler = async () => {\n    setIsLoading(true);\n\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    // if (!response.ok) throw Error(\"Something went wrong ...Retrying\");\n    const data = response.json();\n    const mappedMoviesData = data.results.map((data) => ({\n      id: data.episode_id,\n      title: data.title,\n      releaseDate: data.release_date,\n      openingText: data.opening_crawl,\n    }));\n    setMoviesData(mappedMoviesData);\n    setIsLoading(false);\n  };\n\n  // useEffect(()=> {\n  //   fetchApiMoviesHandler();\n  // }, [])\n\n \n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchApiMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={moviesData} />}\n        {!isLoading && moviesData.length === 0 && <p>Not found moviesData</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAElD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEjD,IAAIW,qBAAqB,GAAG,MAAAA,CAAA,KAAY;IACtCD,YAAY,CAAC,IAAI,CAAC;IAElB,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D;IACA,MAAMC,IAAI,GAAGF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC5B,MAAMC,gBAAgB,GAAGF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEJ,IAAI,KAAM;MACnDK,EAAE,EAAEL,IAAI,CAACM,UAAU;MACnBC,KAAK,EAAEP,IAAI,CAACO,KAAK;MACjBC,WAAW,EAAER,IAAI,CAACS,YAAY;MAC9BC,WAAW,EAAEV,IAAI,CAACW;IACpB,CAAC,CAAC,CAAC;IACHjB,aAAa,CAACQ,gBAAgB,CAAC;IAC/BN,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;;EAED;EACA;EACA;;EAGA,oBACEN,OAAA,CAACL,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACbvB,OAAA;MAAAuB,QAAA,eACEvB,OAAA;QAAQwB,OAAO,EAAEjB,qBAAsB;QAAAgB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACV5B,OAAA;MAAAuB,QAAA,GACG,CAAClB,SAAS,iBAAIL,OAAA,CAACF,UAAU;QAAC+B,MAAM,EAAE1B;MAAW;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChD,CAACvB,SAAS,IAAIF,UAAU,CAAC2B,MAAM,KAAK,CAAC,iBAAI9B,OAAA;QAAAuB,QAAA,EAAG;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACpEvB,SAAS,iBAAIL,OAAA;QAAAuB,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC1B,EAAA,CArCQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}