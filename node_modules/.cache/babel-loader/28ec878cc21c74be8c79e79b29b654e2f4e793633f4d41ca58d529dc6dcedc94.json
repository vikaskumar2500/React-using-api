{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharpener\\\\React.Js\\\\BuildApps\\\\fetchingapiproject\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cancelRetrying, setCancelRetying] = useState(false);\n  const fetchApiMoviesHandler = () => {\n    setIsLoading(true);\n    const getMoviesHalper = async () => {\n      const response = await fetch(\"https://swapi.dev/api/film\");\n      if (!response.ok) {\n        setCancelRetying(true);\n        throw Error(\"Something went wrong ...Retrying\");\n      } else {\n        setCancelRetying(false);\n        return await response.json();\n      }\n    };\n    getMoviesHalper().then(data => {\n      const mappedMoviesData = data.results.map(data => ({\n        id: data.episode_id,\n        title: data.title,\n        releaseDate: data.release_date,\n        openingText: data.opening_crawl\n      }));\n      setMoviesData(mappedMoviesData);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchApiMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 24\n      }, this), !isLoading && moviesData.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Not found moviesData\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 51\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y01bcjwRleii/vtYXI7fwsUGMd4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","moviesData","setMoviesData","isLoading","setIsLoading","cancelRetrying","setCancelRetying","fetchApiMoviesHandler","getMoviesHalper","response","fetch","ok","Error","json","then","data","mappedMoviesData","results","map","id","episode_id","title","releaseDate","release_date","openingText","opening_crawl","catch","error","console","log","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","movies","length","type","_c","$RefreshReg$"],"sources":["D:/Sharpener/React.Js/BuildApps/fetchingapiproject/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n  const [moviesData, setMoviesData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cancelRetrying, setCancelRetying] = useState(false);\n\n  const fetchApiMoviesHandler = () => {\n    setIsLoading(true);\n    const getMoviesHalper = async () => {\n      const response = await fetch(\"https://swapi.dev/api/film\");\n      if (!response.ok) {\n        setCancelRetying(true);\n        throw Error(\"Something went wrong ...Retrying\");\n      } else {\n        setCancelRetying(false);\n        return await response.json();\n      }\n    };\n\n    getMoviesHalper()\n      .then((data) => {\n        const mappedMoviesData = data.results.map((data) => ({\n          id: data.episode_id,\n          title: data.title,\n          releaseDate: data.release_date,\n          openingText: data.opening_crawl,\n        }));\n        setMoviesData(mappedMoviesData);\n        setIsLoading(false);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchApiMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={moviesData} />}\n        {!isLoading && moviesData.length === 0 && <p>Not found moviesData</p>}\n        {isLoading && (\n          <div>\n            {\" \"}\n            <p>Loading...</p>\n            <button type=\"button\">Cancel</button>\n          </div>\n        )}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}